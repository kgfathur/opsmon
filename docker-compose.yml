version: '3.8'

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      device: /data/prometheus
      o: bind

  grafana_data:
    driver: local
    driver_opts:
      type: none
      device: /data/grafana
      o: bind

networks:
  monitor-net:
    driver: bridge

services:
  prometheus:
    user: "993:988"
    image: prom/prometheus:v2.22.1
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/data/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - monitor-net
    restart: always
    # links:
      # - cadvisor:cadvisor
      # - alertmanager:alertmanager
#      - pushgateway:pushgateway
    # depends_on:
      # - cadvisor
#      - pushgateway
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  grafana:
    image: grafana/grafana:7.3.2
    user: "472:0"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/home.json:/usr/share/grafana/public/dashboards/home.json
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitor-net
    restart: always

  # cadvisor:
    # image: gcr.io/cadvisor/cadvisor:v0.38.4
    # volumes:
      # - /:/rootfs:ro
      # - /var/run:/var/run:rw
      # - /sys:/sys:ro
      # - /var/lib/docker/:/var/lib/docker:ro
    # ports:
      # - 8080:8080
    # networks:
      # - back-tier
    # restart: always
    # deploy:
      # mode: global

